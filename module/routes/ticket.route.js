const e=require("express"),t=require("../database/index.model"),i=require("../function/ticketFiltre.fn");let o=e.Router();o.get("/",(function(e,o){t.Ticket.findAll({include:["Responsible","Creator","Resolver"]}).then(e=>{e=e.map(i.ticketFiltre),o.json(e)}).catch(e=>{o.status(400),o.json(e)})})),o.get("/:idTicket",(function(e,o){t.Ticket.findOne({where:{idTicket:e.params.idTicket},include:["Responsible","Creator","Resolver",{model:t.History,include:[t.User]}]}).then(e=>{o.json(i.ticketFiltre(e))}).catch(e=>{o.status(400),o.json(e)})})),o.post("/",(function(e,o){console.log(e.body),t.Ticket.create({ticketCreation:e.body.ticketCreation,ticketDescription:e.body.ticketDescription,ticketHardware:e.body.ticketHardware,fkUserCreator:e.user.idUser,fkUserResponsible:e.body.fkUserResponsible}).then(s=>t.History.create({historyModif:e.body.ticketCreation,historyDescription:e.body.ticketDescription,fkUser:e.user.idUser,fkTicket:s.idTicket}).then(()=>t.Ticket.findOne({where:{idTicket:s.idTicket},include:["Responsible","Creator","Resolver",{model:t.History,include:[t.User]}]})).then(e=>{console.log(e),o.json(i.ticketFiltre(e))})).catch(e=>{o.status(400),o.json(e)})})),o.put("/:idTicket",(function(e,o){t.Ticket.findOne({where:{idTicket:e.params.idTicket}}).then(s=>{e.body.modifState=e.body.modifState?e.body.modifState:s.ticketState;let r=t.History.create({historyModif:e.body.modifDate,historyDescription:e.body.modifDescription,historyState:e.body.modifState,fkUser:e.user.idUser,fkTicket:e.params.idTicket});return s.ticketState!=e.body.modifState&&(r=r.then(()=>t.Ticket.update({ticketState:e.body.modifState},{where:{idTicket:e.params.idTicket}})),3==e.body.modifState&&(r=r.then(()=>t.Ticket.update({ticketResolve:e.body.modifDate,fkUserResolver:e.user.idUser},{where:{idTicket:e.params.idTicket}})))),r.then(()=>t.Ticket.findOne({where:{idTicket:e.params.idTicket},include:["Responsible","Creator","Resolver",{model:t.History,include:[t.User]}]})).then(e=>{o.json(i.ticketFiltre(e))})}).catch(e=>{o.status(400),o.json(e)})})),o.delete("/:idTicket",(function(e,i){t.Ticket.destroy({where:{idTicket:e.params.idTicket}}).then(e=>{e?i.status(204):i.status(404),i.json()}).catch(e=>{i.status(400),i.json(e)})})),module.exports=o;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
