const e=require("express"),t=require("../database/index.model"),i=require("../function/ticketFiltre.fn");let r=e.Router();r.get("/",(function(e,r){t.Ticket.findAll({include:["Responsible","Creator","Resolver"]}).then(e=>{e=e.map(i.ticketFiltre),r.json(e)}).catch(e=>{r.status(400),r.json(e)})})),r.get("/:idTicket",(function(e,r){t.Ticket.findOne({where:{idTicket:e.params.idTicket},include:["Responsible","Creator","Resolver",{model:t.History,include:[t.User]}]}).then(e=>{r.json(i.ticketFiltre(e))}).catch(e=>{r.status(400),r.json(e)})})),r.post("/",(function(e,r){t.Ticket.create({ticketCreation:e.body.ticketCreation,ticketDescription:e.body.ticketDescription,ticketHardware:e.body.ticketHardware,fkUserCreator:e.user.idUser}).then(o=>t.History.create({historyModif:e.body.ticketCreation,historyDescription:e.body.ticketDescription,fkUser:e.user.idUser,fkTicket:o.idTicket}).then(()=>t.Ticket.findOne({where:{idTicket:o.idTicket},include:["Responsible","Creator","Resolver",{model:t.History,include:[t.User]}]})).then(e=>{r.json(i.ticketFiltre(e))})).catch(e=>{r.status(400),r.json(e)})})),r.put("/:idTicket",(function(e,r){t.Ticket.findOne({where:{idTicket:e.params.idTicket}}).then(o=>{e.body.modifState=e.body.modifState?e.body.modifState:o.ticketState;let s=t.History.create({historyModif:e.body.modifDate,historyDescription:e.body.modifDescription,historyState:e.body.modifState,fkUser:e.user.idUser,fkTicket:e.params.idTicket});return o.ticketState!=e.body.modifState&&(s=s.then(()=>t.Ticket.update({ticketState:e.body.modifState},{where:{idTicket:e.params.idTicket}})),3==o.ticketState&&(s=s.then(()=>t.Ticket.update({ticketResolve:e.body.modifDate,fkUserResolver:e.user.idUser},{where:{idTicket:e.params.idTicket}})))),s.then(()=>t.Ticket.findOne({where:{idTicket:e.params.idTicket},include:["Responsible","Creator","Resolver",{model:t.History,include:[t.User]}]})).then(e=>{r.json(i.ticketFiltre(e))})}).catch(e=>{r.status(400),r.json(e)})})),r.delete("/:idTicket",(function(e,i){t.Ticket.destroy({where:{idTicket:e.params.idTicket}}).then(e=>{e?i.status(204):i.status(404),i.json()}).catch(e=>{i.status(400),i.json(e)})})),module.exports=r;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
